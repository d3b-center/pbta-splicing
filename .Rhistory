bind_rows(histology_matched_dup_fixed) %>%
tibble::column_to_rownames("sample_id") %>%
arrange(Group, harmonized_diagnosis)
# filter to HGAT samples
kinase_activity_fixed_hgat <-kinase_activity_fixed %>%
# order the columns for plotting
dplyr::select(rownames(histology_matched_filtered))
View(histology_matched_filtered)
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
filename = file.path(plots_dir, "kinase_group_psi_hist.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
filename = file.path(plots_dir, "kinase_group_psi_hist.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE
)
histology_matched_filtered <- histology_matched_filtered %>%
dplyr::filter(!sample_id %in% duplicated_sample_id) %>%
bind_rows(histology_matched_dup_fixed) %>%
tibble::column_to_rownames("sample_id") %>%
arrange(Group, harmonized_diagnosis) %>%
dplyr::select(-c("RNA_library", "composition", "Kids_First_Biospecimen_ID"))
View(histology_matched_filtered)
istology_matched_filtered <- histology_matched_filtered %>% dplyr::select(-c("RNA_library", "composition", "Kids_First_Biospecimen_ID"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
filename = file.path(plots_dir, "kinase_group_psi_hist.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered ,
cluster_rows=FALSE,
cluster_cols=FALSE
)
View(istology_matched_filtered)
histology_matched_filtered <- histology_matched_filtered %>% dplyr::select(-c("RNA_library", "composition", "Kids_First_Biospecimen_ID"))
View(istology_matched_filtered)
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered ,
cluster_rows=FALSE,
cluster_cols=FALSE
)
# PSI group
psi_group_pan <- readr::read_tsv(file.path(input_dir, "CLK1_PSI.pan-cancer.groupings.txt"))
psi_group_pan$Group <- factor(psi_group_pan$Group, levels = c("Low","Medium","High"))
# match BS_ID to sample ID
histology_matched_pan <- histology_df %>%
dplyr::filter(Kids_First_Biospecimen_ID %in% psi_group_pan$samples) %>%
dplyr::select(Kids_First_Biospecimen_ID, sample_id, harmonized_diagnosis, RNA_library, composition)
no_hist <- psi_group_pan$samples[!psi_group_pan$samples %in% histology_df$Kids_First_Biospecimen_ID]
no_hist
# checkout common samples
common_samples <- histology_matched_pan$sample_id[histology_matched_pan$sample_id %in% colnames(kinase_activity)] %>%
unique()
length(common_samples)
# generate an annotation file for the heatmap
histology_matched_filtered <- histology_matched_pan %>%
dplyr::filter(sample_id %in% common_samples) %>%
left_join( psi_group_pan, by=c("Kids_First_Biospecimen_ID"= "samples"))
# find duplicated samples
duplicated_sample_id <- histology_matched_filtered$sample_id[duplicated(histology_matched_filtered$sample_id)]
duplicated_sample_id
histology_matched_filtered_dup <- histology_matched_filtered %>%
filter(sample_id %in% duplicated_sample_id)
histology_matched_filtered_dup %>%
dplyr::select(-harmonized_diagnosis) %>%
knitr::kable()
# filter for distinct stranded, solid tissue
histology_matched_dup_match <- histology_matched_filtered_dup %>%
dplyr::filter(RNA_library == "poly-A",
composition == "Solid Tissue") %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
# find duplicated samples
duplicated_sample_id <- histology_matched_filtered$sample_id[duplicated(histology_matched_filtered$sample_id)]
duplicated_sample_id
histology_matched_filtered_dup <- histology_matched_filtered %>%
filter(sample_id %in% duplicated_sample_id)
histology_matched_filtered_dup %>%
dplyr::select(-harmonized_diagnosis) %>%
knitr::kable()
# filter for distinct stranded, solid tissue
histology_matched_dup_match <- histology_matched_filtered_dup %>%
dplyr::filter(RNA_library == "poly-A",
composition == "Solid Tissue") %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_non_match <- histology_matched_filtered_dup %>%
dplyr::filter(!sample_id %in% histology_matched_dup_match$sample_id) %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_fixed <- bind_rows(histology_matched_dup_match,
histology_matched_dup_non_match)
duplicated_sample_id %>% unique()
histology_matched_filtered <- histology_matched_filtered %>%
dplyr::filter(!sample_id %in% duplicated_sample_id) %>%
bind_rows(histology_matched_dup_fixed) %>%
tibble::column_to_rownames("sample_id") %>%
arrange(Group, harmonized_diagnosis) %>%
dplyr::select(-c("RNA_library", "composition", "Kids_First_Biospecimen_ID"))
# filter to pan cancer samples
kinase_activity_fixed_pan <-kinase_activity_fixed %>%
# order the columns for plotting
dplyr::select(rownames(histology_matched_filtered))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_pan),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
show_colnames = F,
filename = file.path(plots_dir, "kinase_group_psi_hist_pan.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_pan),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
show_colnames = F
)
# generate an annotation file for the heatmap
histology_matched_filtered <- histology_matched_pan %>%
dplyr::filter(sample_id %in% common_samples) %>%
left_join( psi_group_pan, by=c("Kids_First_Biospecimen_ID"= "samples"))
# find duplicated samples
duplicated_sample_id <- histology_matched_filtered$sample_id[duplicated(histology_matched_filtered$sample_id)]
duplicated_sample_id %>% unique()
histology_matched_filtered_dup <- histology_matched_filtered %>%
filter(sample_id %in% duplicated_sample_id)
histology_matched_filtered_dup %>%
dplyr::select(-harmonized_diagnosis) %>%
knitr::kable()
# filter for distinct stranded, solid tissue
histology_matched_dup_match <- histology_matched_filtered_dup %>%
dplyr::filter(RNA_library == "poly-A",
composition == "Solid Tissue") %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_non_match <- histology_matched_filtered_dup %>%
dplyr::filter(!sample_id %in% histology_matched_dup_match$sample_id) %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_fixed <- bind_rows(histology_matched_dup_match,
histology_matched_dup_non_match)
histology_matched_filtered <- histology_matched_filtered %>%
dplyr::filter(!sample_id %in% duplicated_sample_id) %>%
bind_rows(histology_matched_dup_fixed) %>%
tibble::column_to_rownames("sample_id") %>%
arrange(Group, PSI, harmonized_diagnosis) %>%
dplyr::select(-c("RNA_library", "composition", "Kids_First_Biospecimen_ID"))
# filter to pan cancer samples
kinase_activity_fixed_pan <-kinase_activity_fixed %>%
# order the columns for plotting
dplyr::select(rownames(histology_matched_filtered))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_pan),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
show_colnames = F,
filename = file.path(plots_dir, "kinase_group_psi_hist_pan.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_pan),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
show_colnames = F
)
mut11<-1
mut10<-2
mut10<-21
mut01<-1
mut00<-5
standard_error_or = sqrt(1/mut11 + 1/mut10 + 1/mut01 + 1/mut00)
odds_ratio <- 0.23809523809523808
or_ci_lower_bound = exp(log(odds_ratio) - 1.96 * standard_error_or)
or_ci_upper_bound = exp(log(odds_ratio) + 1.96 * standard_error_or)
mut11 <-0
mut10 <- 42
mut01 <-7
mut00 <-163
odds_ratio <- 0
standard_error_or = sqrt(1/(mut11+0.5) + 1/(mut10+0.5) + 1/(mut01+0.5) + 1/(mut00+0.5))
or_ci_lower_bound = exp(log(odds_ratio) - 1.96 * standard_error_or)
or_ci_upper_bound = exp(log(odds_ratio) + 1.96 * standard_error_or)
log(odds_ratio)
1.96 * standard_error_or
log(odds_ratio) - 1.96 * standard_error_or
exp(-Inf)
if(mut11==0 | mut10==0 | mut01==0 | mut00==0){
print(sure))
}
if(mut11==0 | mut10==0 | mut01==0 | mut00==0){
print(sure)
}
if(mut11==0 | mut10==0 | mut01==0 | mut00==0){
print("sure")
}
mut11 <- 12
mut00 <-0
if(mut11==0 | mut10==0 | mut01==0 | mut00==0){
print("sure")
}
sum(mut11==0 | mut10==0 | mut01==0 | mut00==0)
mut11=0
mut10=40
mut01=7
mut00=40
odds_ratio =0
standard_error_or = sqrt(1/(mut11+0.5) + 1/(mut10+0.5) + 1/(mut01+0.5) + 1/(mut00+0.5))
or_ci_lower = exp(log(odds_ratio) - 1.96 * standard_error_or)
or_ci_upper_bound = exp(log(odds_ratio) + 1.96 * standard_error_or)
or_ci_lower = exp(log(odds_ratio) - 1.96 * standard_error_or)
or_ci_upper_bound = exp(log(odds_ratio) + 1.96 * standard_error_or)
mut11=3
mut10=4
mut01=2
mut00=203
odds_ratio=76.125
standard_error_or = sqrt(1/mut11 + 1/mut10 + 1/mut01 + 1/mut00)
or_ci_lower <- exp(log(odds_ratio) - 1.96 * standard_error_or)
or_ci_lower < odds_ratio
min(or_ci_lower, odds_ratio)
or_ci_upper_bound <- exp(log(odds_ratio) + 1.96 * standard_error_or)
sum(mut11==0 | mut10==0 | mut01==0 | mut00==0)
standard_error_or <- sqrt(1/mut11 + 1/mut10 + 1/mut01 + 1/mut00)
or_ci_lower <- exp(log(odds_ratio) - 1.96 * standard_error_or)
or_ci_upper_bound <- exp(log(odds_ratio) + 1.96 * standard_error_or)
standard_error_or <- sqrt(1/(mut11+0.5) + 1/(mut10+0.5) + 1/(mut01+0.5) + 1/(mut00+0.5))
or_ci_lower <- exp(log(odds_ratio) - 1.96 * standard_error_or)
or_ci_upper_bound <- exp(log(odds_ratio) + 1.96 * standard_error_or)
mut11=25
mut10=31
mut01=15
mut00=595
odds_ratio=31.989247311827956
standard_error_or <- sqrt(1/(mut11+0.5) + 1/(mut10+0.5) + 1/(mut01+0.5) + 1/(mut00+0.5))
or_ci_upper_bound <- exp(log(odds_ratio) + 1.96 * standard_error_or)
mut11=5
mut10=7
mut01=4
mut00=118
odds_ratio=21.071428571428573
standard_error_or <- sqrt(1/(mut11+0.5) + 1/(mut10+0.5) + 1/(mut01+0.5) + 1/(mut00+0.5))
or_ci_upper_bound <- exp(log(odds_ratio) + 1.96 * standard_error_or)
sum(mut11==0 | mut10==0 | mut01==0 | mut00==0)>0
getwd()
setwd("/Users/jinr/CHOP_miscellaneous/maf_tier_classification")
# Define Directories
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
analysis_dir <- file.path(root_dir, "maf_tier_classification")
ref_dir <- file.path(analysis_dir, "references")
results_dir <- file.path(analysis_dir, "results", "oncokb_annotated")
if(!dir.exists(results_dir)){
dir.create(results_dir, recursive = TRUE)
}
maf_file_dir <- file.path(analysis_dir, "data", "maf_files")
# oncokb binary
readRenviron("~/.Renviron")
oncokb_token <- Sys.getenv("oncokb_token")
oncokb_tool <- "~/oncokb-annotator"
maf_annotator <- file.path(oncokb_tool, "MafAnnotator.py")
# run oncokb annotator for all maf files
maf_files <- list.files(maf_file_dir)
i=1
# find the right maf file
maf_file_name <- maf_files[i]
maf_file <- file.path(maf_file_dir, maf_file_name)
# define the reference genome
ref_genome <- "GRCh38"
# find the identifier of the file
identifier <- gsub("\\..*", "",  maf_file_name)
maf_out <- file.path(results_dir, paste0(identifier, '_oncokb_annotated.txt'))
command <- paste('python3', maf_annotator, '-i', maf_file, '-o', maf_out, '-b', oncokb_token, '-r', ref_genome, '-q hgvsp_short')
system(command)
command
see <- readr::read_tsv("results/oncokb_annotated/es_dfarber_broad_2014_data_mutations_mskcc_merged_38_oncokb_annotated.txt")
View(see)
check <- readr::read_tsv("results/tier_annotated/all_phase2_target_2018_pub_data_mutations_mskcc_merged_38_tier_annotated.tsv")
View(check)
getwd()
setwd("/Users/jinr/CHOP_miscellaneous")
rm(list=ls())
histology_df <- readr::read_tsv("~/OpenPedCan-analysis/data/v10/histologies.tsv")
histology_df <- readr::read_tsv("~/OpenPedCan-analysis/data/v10/histologies.tsv", guess_max=100000)
na_harmonized <- histology_df %>%
dplyr::filter(sample_type == "Tumor") %>%
dplyr::filter(is.na(harmonized_diagnosis))
View(na_harmonized)
na_harmonized %>% select(cancer_group, cohort) %>% table()
na_harmonized <- histology_df %>%
dplyr::filter(sample_type == "Tumor") %>%
dplyr::filter(cohort != "TCGA") %>%
dplyr::filter(is.na(harmonized_diagnosis))
na_harmonized %>% select(cancer_group, cohort) %>% table()
# find the remaining biospecimen id
keep <- histology_df %>%
dplyr::filter(!Kids_First_Biospecimen_ID %in% na_harmonzied$Kids_First_Biospecimen_ID)
# filter to samples that do not have harmonized diagnosis (minus TCGA)
na_harmonized <- histology_df %>%
dplyr::filter(sample_type == "Tumor") %>%
dplyr::filter(cohort != "TCGA") %>%
dplyr::filter(is.na(harmonized_diagnosis))
# find the remaining biospecimen id
keep <- histology_df %>%
dplyr::filter(!Kids_First_Biospecimen_ID %in% nna_harmonized$Kids_First_Biospecimen_ID)
# find the remaining biospecimen id
keep <- histology_df %>%
dplyr::filter(!Kids_First_Biospecimen_ID %in% na_harmonized$Kids_First_Biospecimen_ID)
# fix the NA harmonized diagnosis
na_harmonized_fixed <- na_harmonized %>%
dplyr::mutate(harmonized_diagnosis = case_when(
!is.na(pathology_diagnosis) ~ pathology_diagnosis,
is.na(pathology_diganosis) ~ cancer_group
))
# fix the NA harmonized diagnosis
na_harmonized_fixed <- na_harmonized %>%
dplyr::mutate(harmonized_diagnosis == case_when(
!is.na(pathology_diagnosis) ~ pathology_diagnosis,
is.na(pathology_diganosis) ~ cancer_group
))
colnames(na_harmonized)
# fix the NA harmonized diagnosis
na_harmonized_fixed <- na_harmonized %>%
dplyr::mutate(harmonized_diagnosis = dplyr::case_when(
!is.na(pathology_diagnosis) ~ pathology_diagnosis,
is.na(pathology_diagnosis) ~ cancer_group
))
View(na_harmonized_fixed)
na_harmonized_fixed %>% filter(is.na(harmonized_diagnosis)) %>% nrow()
View(na_harmonized)
na_harmonized %>% filter(is.na(pathology_diagnosis)) %>% nrow()
na_harmonized %>% pull(pathology_diagnosis) %>% unique()
# fix the NA harmonized diagnosis
na_harmonized_fixed <- na_harmonized %>%
dplyr::mutate(harmonized_diagnosis = dplyr::case_when(
pathology_diagnosis != "Unknown" ~ pathology_diagnosis,
pathology_diagnosis == "Unknown" ~ cancer_group
))
na_harmonized_fixed %>% pull(harmonized_diagnosis) %>% unique()
# combine the two dfs and write out
bind_rows(na_harmonized_fixed, keep) %>%
readr::write_tsv("~/Desktop/pedcbio_v10/histologies.tsv")
rm(list = ls())
setwd("~/pbta-splicing/")
BiocManager::install("pheatmap")
BiocManager::install("readxl")
suppressPackageStartupMessages({
library(tidyverse)
library(readr)
library(pheatmap)
library(readxl)
})
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
data_dir <- file.path(root_dir, "data")
analysis_dir <- file.path(root_dir, "analyses", "kinase_activity_corr")
input_dir <- file.path(analysis_dir, "input")
plots_dir <- file.path(analysis_dir, "plots")
root_dir <- rprojroot::find_root(rprojroot::has_dir(".git"))
data_dir <- file.path(root_dir, "data")
analysis_dir <- file.path(root_dir, "analyses", "kinase_activity_corr")
input_dir <- file.path(analysis_dir, "input")
plots_dir <- file.path(analysins_dir, "plots")
if(!dir.exists(plots_dir)){
dir.create(plots_dir, recursive=TRUE)
}
# histology file
histology_df <- readr::read_tsv(file.path(data_dir, "pbta-histologies.tsv"), guess_max=10000)
# kinase activity score
kinase_activity <- readxl::read_excel(file.path(input_dir, "1-s2.0-S0092867420314513-mmc4.xlsx"), sheet =3, skip=2) %>%
tibble::column_to_rownames("proID") %>%
dplyr::select(-geneID)
# clear the NA in the numbers
fix_NA_function <- function(df){
df_fixed <- apply(df, 2, function(x) as.numeric(gsub("NA", "", x)))
rownames(df_fixed) <- rownames(df)
return(df_fixed)
}
kinase_activity_fixed <-fix_NA_function(kinase_activity) %>%
as.data.frame()
# PSI group
psi_group <- readr::read_tsv(file.path(input_dir, "CLK1_PSI_grouping.txt"))
psi_group$Group <- factor(psi_group$Group, levels = c("Low","Med","High"))
# match BS_ID to sample ID
histology_matched <- histology_df %>%
dplyr::filter(Kids_First_Biospecimen_ID %in% psi_group$BS_id) %>%
dplyr::select(Kids_First_Biospecimen_ID, sample_id, harmonized_diagnosis, composition, RNA_library)
View(histology_matched)
no_hist <- psi_group$BS_id[!psi_group$BS_id %in% histology_df$Kids_First_Biospecimen_ID]
no_hist
# checkout common samples
common_samples <- histology_matched$sample_id[histology_matched$sample_id %in% colnames(kinase_activity)] %>%
unique()
common_samples
# generate an annotation file for the heatmap
histology_matched_filtered <- histology_matched %>%
dplyr::filter(sample_id %in% common_samples) %>%
left_join( psi_group, by=c("Kids_First_Biospecimen_ID"= "BS_id"))
View(histology_matched_filtered)
# find duplicated samples
duplicated_sample_id <- histology_matched_filtered$sample_id[duplicated(histology_matched_filtered$sample_id)]
duplicated_sample_id
# print out duplicated samples with RNA library and composition
histology_matched_filtered_dup <-histology_matched_filtered %>% filter(sample_id %in% duplicated_sample_id)
histology_matched_filtered_dup%>%
dplyr::select(-"harmonized_diagnosis") %>%
knitr::kable()
# filter for distinct stranded, solid tissue
histology_matched_dup_match <- histology_matched_filtered_dup %>%
dplyr::filter(RNA_library == "poly-A",
composition == "Solid Tissue") %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_non_match <- histology_matched_filtered_dup %>%
dplyr::filter(!sample_id %in% histology_matched_dup_match$sample_id) %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_fixed <- bind_rows(histology_matched_dup_match,
histology_matched_dup_non_match)
histology_matched_filtered <- histology_matched_filtered %>%
dplyr::filter(!sample_id %in% duplicated_sample_id) %>%
bind_rows(histology_matched_dup_fixed) %>%
tibble::column_to_rownames("sample_id") %>%
arrange(Group, harmonized_diagnosis) %>%
dplyr::select(-c("RNA_library", "composition", "Kids_First_Biospecimen_ID"))
# filter to HGAT samples
kinase_activity_fixed_hgat <-kinase_activity_fixed %>%
# order the columns for plotting
dplyr::select(rownames(histology_matched_filtered))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
filename = file.path(plots_dir, "kinase_group_psi_hist.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_hgat),
annotation_col = histology_matched_filtered ,
cluster_rows=FALSE,
cluster_cols=FALSE
)
# PSI group
psi_group_pan <- readr::read_tsv(file.path(input_dir, "CLK1_PSI.pan-cancer.groupings.txt"))
psi_group_pan$Group <- factor(psi_group_pan$Group, levels = c("Low","Medium","High"))
# match BS_ID to sample ID
histology_matched_pan <- histology_df %>%
dplyr::filter(Kids_First_Biospecimen_ID %in% psi_group_pan$samples) %>%
dplyr::select(Kids_First_Biospecimen_ID, sample_id, harmonized_diagnosis, RNA_library, composition)
no_hist <- psi_group_pan$samples[!psi_group_pan$samples %in% histology_df$Kids_First_Biospecimen_ID]
no_hist
# checkout common samples
common_samples <- histology_matched_pan$sample_id[histology_matched_pan$sample_id %in% colnames(kinase_activity)] %>%
unique()
length(common_samples)
# generate an annotation file for the heatmap
histology_matched_filtered <- histology_matched_pan %>%
dplyr::filter(sample_id %in% common_samples) %>%
left_join( psi_group_pan, by=c("Kids_First_Biospecimen_ID"= "samples"))
# find duplicated samples
duplicated_sample_id <- histology_matched_filtered$sample_id[duplicated(histology_matched_filtered$sample_id)]
duplicated_sample_id %>% unique()
histology_matched_filtered_dup <- histology_matched_filtered %>%
filter(sample_id %in% duplicated_sample_id)
histology_matched_filtered_dup %>%
dplyr::select(-harmonized_diagnosis) %>%
knitr::kable()
# filter for distinct stranded, solid tissue
histology_matched_dup_match <- histology_matched_filtered_dup %>%
dplyr::filter(RNA_library == "poly-A",
composition == "Solid Tissue") %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_non_match <- histology_matched_filtered_dup %>%
dplyr::filter(!sample_id %in% histology_matched_dup_match$sample_id) %>%
dplyr::distinct(sample_id, .keep_all = TRUE)
histology_matched_dup_fixed <- bind_rows(histology_matched_dup_match,
histology_matched_dup_non_match)
histology_matched_filtered <- histology_matched_filtered %>%
dplyr::filter(!sample_id %in% duplicated_sample_id) %>%
bind_rows(histology_matched_dup_fixed) %>%
tibble::column_to_rownames("sample_id") %>%
arrange(Group, PSI, harmonized_diagnosis) %>%
dplyr::select(-c("RNA_library", "composition", "Kids_First_Biospecimen_ID"))
# filter to pan cancer samples
kinase_activity_fixed_pan <-kinase_activity_fixed %>%
# order the columns for plotting
dplyr::select(rownames(histology_matched_filtered))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_pan),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
show_colnames = F,
filename = file.path(plots_dir, "kinase_group_psi_hist_pan.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_pan),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
width = 10,
height = 8,
show_colnames = F,
filename = file.path(plots_dir, "kinase_group_psi_hist_pan.pdf"))
pheatmap::pheatmap(as.matrix(kinase_activity_fixed_pan),
annotation_col = histology_matched_filtered,
cluster_rows=FALSE,
cluster_cols=FALSE,
show_colnames = F
)
